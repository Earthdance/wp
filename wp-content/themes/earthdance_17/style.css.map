{"version":3,"sources":["style.styl","global/defaults.styl","global/columns.styl","global/container.styl","vendor/rupture.styl","global/headings.styl","global/images.styl","global/button.styl","header/header.styl","nav/nav.styl","homepage/feature.styl","homepage/grow.styl","homepage/stats.styl","homepage/believe.styl","homepage/support.styl","footer/footer.styl"],"names":[],"mappings":"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","file":"style.css","sourcesContent":["/*\nTheme Name:\t\tEarthdance 2017\nDescription:\tTheme for Earthdance\n*/\n\n@import \"vendor/*\"\n@import \"global\"\n@import \"header\"\n@import \"nav\"\n@import \"homepage\"\n@import \"footer\"\n","*\n  box-sizing: border-box\n  margin 0\n  padding 0\n\n  &::after,\n  &::before\n    box-sizing: border-box\n\n:root\n  font-size: 20px\n\nbody\n  color brown\n  font-family sans\n  line-height 1.5\n  position relative\n\n//Resets\na\n  text-decoration none\n\np\n  padding-bottom 1rem\n","[class*=\"__columns\"]\n  display flex\n","[class*=\"__container\"]\n  display flex\n  margin 0 auto\n  max-width 1200px\n\n  +tablet()\n    background-color yellow\n\n  +below(550px)\n    background-color orange\n","// Rupture\n// Doap Media query mixins for Stylus\n// http://jenius.github.io/rupture/\n\n// Breakpoint variables\n// TODO double check these settings\nphone = 600px\ntablet = 880px\ndesktop = 1200px\n\nbase-font-size ?= 20px\nrasterise-media-queries ?= false\n\nrupture = {\n  rasterise-media-queries: rasterise-media-queries\n  mobile-cutoff: 400px\n  desktop-cutoff: 1050px\n  hd-cutoff: 1800px\n  enable-em-breakpoints: false\n  base-font-size: base-font-size\n  anti-overlap: false\n  density-queries: 'dppx' 'webkit' 'moz' 'dpi'\n  retina-density: 1.5\n  use-device-width: false\n}\nrupture.scale = 0 (rupture.mobile-cutoff) 600px 800px (rupture.desktop-cutoff) (rupture.hd-cutoff)\nrupture.scale-names = 'xs' 's' 'm' 'l' 'xl' 'hd'\n\n-is-string(val)\n  if typeof(val) is not 'unit'\n    if val is a 'string' or val is a 'ident'\n      true\n    else\n      false\n  else\n    false\n\n-get-scale-number(scale-name)\n  for list-item, i in rupture.scale-names\n    if list-item is scale-name\n      return i + 1\n  return false\n\n-convert-to(to-unit, value, context = rupture.base-font-size)\n  from-unit = unit(value)\n  return value if to-unit is from-unit\n  if to-unit in ('em' 'rem')\n    return value if from-unit in ('em' 'rem')\n    return unit((value / context), to-unit)\n  if to-unit is 'px'\n    return unit((value * context), 'px')\n\n-on-scale(n)\n  return unit(n) is ''\n\n-larger-than-scale(n)\n  return (n > (length(rupture.scale) - 1)) and -on-scale(n)\n\n-is-zero(n)\n  return n is 0\n\n-overlap-shift(anti-overlap, n)\n  shift-unit = unit(n)\n  anti-overlap = 0px unless anti-overlap\n  anti-overlap = 1px if anti-overlap is true\n  if length(anti-overlap) is 1\n    return -convert-to(shift-unit, anti-overlap)\n  for val in anti-overlap\n    return val if unit(val) is shift-unit\n\n-adjust-overlap(anti-overlap, n, side = 'min')\n  -shift = -overlap-shift(anti-overlap, n)\n  if (side is 'min' and -shift > 0) or (side is 'max' and -shift < 0)\n    n = n + -shift\n  return n\n\n-is-positive(n)\n  return n >= 0\n\n-density-queries(density)\n  if typeof(density) is not 'unit'\n    if not -is-string(density)\n      density = '%s' % density\n  density = rupture.retina-density if density is 'retina'\n  queries = ()\n  for query in rupture.density-queries\n    if query is 'webkit'\n      push(queries, '(-webkit-min-device-pixel-ratio: %s)' % (density))\n    else if query is 'moz'\n      push(queries, '(min--moz-device-pixel-ratio: %s)' % (density))\n    else if query is 'o'\n      push(queries, '(-o-min-device-pixel-ratio: %s/1)' % (density))\n    else if query is 'ratio'\n      push(queries, '(min-device-pixel-ratio: %s)' % (density))\n    else if query is 'dpi'\n      if -is-string(density)\n        density=convert(density)\n      push(queries, '(min-resolution: %sdpi)' % (round(density * 96, 1)))\n    else if query is 'dppx'\n      push(queries, '(min-resolution: %sdppx)' % (density))\n  return queries\n\ncreate-fallback-class(selected, class)\n  /{'' + class + ' ' + selected}\n    {block}\n\n// +between(min, max)\n// usage (scale can be mixed with custom values):\n//   - +between(1, 3) scale:scale\n//   - +between(0, 3) 0 width:scale\n//   - +between(200px, 500px) custom:custom\n//   - +between(0, 300px) 0 width:custom\n//   - +between(1, 300px) scale:custom\n//   - +between(200px, 4) custom:scale\n\nbetween(min, max, anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  selected = selector()\n\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  if -is-string(min)\n    min = -get-scale-number(min)\n  if -is-string(max)\n    max = -get-scale-number(max)\n\n  -min = rupture.scale[min - 1] unless -is-zero(min) or (not -on-scale(min))\n  -max = rupture.scale[max] unless not -on-scale(max)\n  -min ?= min\n  -max ?= max\n\n  if (rupture.rasterise-media-queries)\n    if not (density or -max or orientation)\n      {block}\n  else\n    condition = 'only screen'\n    use-device-width = use-device-width ? 'device-' : ''\n    unless -min is 0\n      -min = -convert-to('em', -min) if rupture.enable-em-breakpoints\n      -min = -adjust-overlap(anti-overlap, -min, side: 'min')\n      condition = condition + ' and (min-' + use-device-width + 'width: %s)' % (-min)\n    unless -larger-than-scale(max)\n      -max = -convert-to('em', -max) if rupture.enable-em-breakpoints\n      -max = -adjust-overlap(anti-overlap, -max, side: 'max')\n      condition = condition + ' and (max-' + use-device-width + 'width: %s)' % (-max)\n    if orientation\n      condition = condition + ' and (orientation: %s)' % (orientation)\n    if density\n      conditions = ()\n      for query in -density-queries(density)\n        push(conditions, condition + ' and %s' % (query))\n      condition = join(', ', conditions)\n    @media condition\n      {block}\n  if fallback-class\n    +create-fallback-class(selected, fallback-class)\n      {block}\n\nat(scale-point, anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +between(scale-point, scale-point, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\nfrom-width(scale-point, anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +between(scale-point, length(rupture.scale), anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\nabove = from-width\n\nto-width(scale-point, anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +between(1, scale-point, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\nbelow = to-width\n\nmobile(anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +below(rupture.mobile-cutoff, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\ntablet(anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +between(rupture.mobile-cutoff, rupture.desktop-cutoff, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\ndesktop(anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +above(rupture.desktop-cutoff, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\nhd(anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +above(rupture.hd-cutoff, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\ndensity(density, orientation = null, fallback-class = null)\n  selected = selector()\n  if not (rupture.rasterise-media-queries)\n    conditions = ()\n    for query in -density-queries(density)\n      condition = 'only screen and %s' % (query)\n      if orientation\n        condition = condition + ' and (orientation: %s)' % (orientation)\n      push(conditions, condition)\n    condition = join(', ', conditions)\n    @media condition\n      {block}\n    if fallback-class\n      +create-fallback-class(selected, fallback-class)\n        {block}\n\npixel-ratio = density\n\nretina(orientation = null, fallback-class = null)\n  +density('retina', orientation, fallback-class)\n    {block}\n\nlandscape(density = null, fallback-class = null)\n  selected = selector()\n  if not (rupture.rasterise-media-queries)\n    if -is-string(density)\n      density = convert(density)\n    if density\n      +pixel-ratio(density, orientation: landscape, fallback-class)\n        {block}\n    else\n      @media only screen and (orientation: landscape)\n        {block}\n      if fallback-class\n        +create-fallback-class(selected, fallback-class)\n          {block}\n\nportrait(density = null, fallback-class = null)\n  selected = selector()\n  if not (rupture.rasterise-media-queries)\n    if -is-string(density)\n      density = convert(density)\n    if density\n      +pixel-ratio(density, orientation: portrait, fallback-class)\n        {block}\n    else\n      @media only screen and (orientation: portrait)\n        {block}\n      if fallback-class\n        +create-fallback-class(selected, fallback-class)\n          {block}\n","[class*='__heading']\n  color white\n  font-family sans\n  font-size 5rem\n  line-height 1\n  padding 5rem 0\n  text-align center\n  text-shadow -1px 1px 0 black\n\n[class*='__subheading']\n  color white\n  font-family sans\n  font-size 6rem\n  text-align center\n  text-shadow -1px 1px 0 black\n\n[class*='__title']\n  color white\n  font-family sans\n  font-size 3rem\n  text-align center\n  text-shadow -1px 1px 0 black\n","// RESPONSIVE IMAGES\nimg, iframe, embed\n  max-width 100%\n  height auto\n  display block\n\n.placeholders,\n.ph\n  width 100vw\n  height 100vh\n  background-image: \\\n    url(\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%'><line x1='100%' y1='0' x2='0' y2='100%' stroke='{green}' stroke-width='2'/></svg>\"),\n    url(\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%'><line x1='0' y1='0' x2='100%' y2='100%' stroke='{green}' stroke-width='2'/></svg>\")\n","[class*=\"__button\"]\n  border-radius 5px\n  box-shadow -1px 1px 0 black\n  font-family roboto condensed\n  font-size 1.5rem\n  padding .5rem 1rem\n  text-shadow 1px 1px 0 black\n",".header\n  &__bg\n    background-color green\n    border-bottom 1px solid hsla(0, 0, 0%, .4)\n\n  &__layer\n    //height 100px\n    position absolute\n    top 0\n    left 0\n    width 100vw\n    z-index 1\n\n  &__container\n    align-items center\n    justify-content space-between\n    padding .5rem 0\n\n  &__logo-box\n    align-items center\n    display flex\n\n  &__logo\n    align-items center\n    color brown\n    display flex\n    font-family cursive\n    font-size 2rem\n\n    span\n      padding 0 .5rem\n\n  &__logo svg\n\n    margin-right .75rem\n    width 60px\n\n    path\n      fill brown\n\n  &__tagline\n    color brown\n    font-size 1.5rem\n      font-weight 100\n    padding 0 .5rem\n\n  &__social\n    align-items center\n    display flex\n\n  &__link\n    color white\n    fill white\n    font-weight 100\n    padding 0 .5rem\n\n  &__icon\n    fill white\n",".nav\n  &__layer\n    //\n  &__container\n    justify-content space-around\n    padding-top 1rem\n\n  &__link\n    color white\n    display flex\n    font-size 1.5rem\n    text-shadow 1px 1px 0 black\n\n  +tablet()\n    background-color yellow\n\n  +below(550px)\n    background-color orange\n",".feature\n  &__layer\n    // background linear-gradient(-180deg, transparent, featureCover)\n    background-attachment fixed\n    background-image url(img/greenHouse.jpg)\n    // background-position center center\n    background-repeat no-repeat\n    background-size cover\n    height 100vh\n    position relative\n\n    &:after\n      content: ''\n      display block\n      height 100px\n      width 100%\n      background-image linear-gradient(hsla(0, 0, 0%, .4), trans)\n      position absolute\n      top 80px\n      left 0\n\n  &__container\n    align-items center\n    flex-direction column\n    height 100vh\n    justify-content flex-start\n    text-align center\n\n  &__main\n    display flex\n    flex-direction column\n    height 100%\n    justify-content center\n    padding-bottom 8rem\n\n\n  &__main svg\n    display flex\n    margin 0 auto\n    width 120px\n    padding-bottom 2.5rem\n\n    path\n      fill white\n\n  &__title\n    color white\n    font-family cursive\n    font-size 6rem\n    text-shadow 1px 1px 0 black\n\n  &__tagline\n    color white\n    font-family roboto condensed\n    font-size 3rem\n    text-shadow 1px 1px 0 black\n",".grow\n  &__layer\n    background-color white\n    height 100%\n\n  &__container\n    align-items center\n    flex-direction column\n    height 100%\n    justify-content space-around\n\n  &__heading\n    color brown\n\n    span\n      display flex\n\n  &__columns\n    padding-bottom 5rem\n\n    &:nth-of-type(odd)\n      .grow__content\n        padding-left 2.5rem\n\n    &:nth-of-type(even)\n      flex-direction row-reverse\n\n      .grow__content\n        padding-right 2.5rem\n\n    &:nth-of-type(1)\n      .grow__pic\n        background-image url(img/crateVeggies.jpg)\n\n    &:nth-of-type(2)\n      .grow__pic\n        background-image url(img/groupLockingArms.jpg)\n\n    &:nth-of-type(3)\n      .grow__pic\n        background-image url(img/kidsLearning.jpg)\n\n  &__pic\n    background-position center center\n    background-repeat no-repeat\n    background-size cover\n\n  &__title\n    color white\n\n  &__content\n    flex 1\n    display flex\n    flex-direction column\n    justify-content center\n    padding 0 1.5rem\n\n\n  &__pic\n    border: 20px solid green\n    flex 1\n    height 100%\n    padding 6rem 0\n\n  &__button\n    display inline-block\n    background-color green\n    border 3px solid green\n    color white\n\n    &:hover\n      background-color white\n      box-shadow none\n      border 3px solid green\n      color green\n",".stats\n  &__layer\n    background-color brown\n\n  &__container\n    align-items center\n\n    flex-direction column\n    height 100%\n\n    display flex\n    flex-direction column\n    height 100%\n    margin 0 auto\n    width 70%\n\n\n  &__heading\n    color white\n    font-family sans\n    font-size 5rem\n    padding 5rem\n    text-align center\n\n  &__columns\n\n\n    display flex\n\n    flex-direction column\n    padding-bottom 5rem\n\n  &__item\n    display flex\n    padding 1rem\n\n\n  &__subheading\n    color white\n    font-family sans\n    font-size 4.5rem\n    flex 1\n    text-align center\n\n  &__content\n    align-items center\n    color white\n    display flex\n    flex 1\n    padding-left 1rem\n\n\n    span\n      display flex\n",".believe\n  &__layer\n    height 100%\n\n  &__container\n    flex-direction column\n    height 100%\n\n  &__columns\n    align-items center\n    padding 5rem 0\n\n  &__heading\n    color brown\n    font-family sans\n    font-size 4.5rem\n    flex 1\n    // padding 2rem\n    text-align center\n\n  &__content\n    align-items center\n    color brown\n    display flex\n    flex 1\n\n  &__photo\n    align-items center\n    display flex\n    flex-direction column\n    padding-bottom 5rem\n\n  &__image\n    align-self flex-end\n    background-image url(img/groupJump.jpg)\n    background-repeat no-repeat\n    background-size cover\n    display flex\n    height 50vh\n    width 50vw\n\n  &__button\n    background-color brown\n    color green\n    padding .5rem 5.5rem\n    margin-right 8rem\n    margin-top 4rem\n",".support\n  &__layer\n    background-image url(img/girlAndGreens.jpg)\n    // background-position center center\n    background-repeat no-repeat\n    background-size cover\n    height 145vh\n\n  &__container\n    align-items center\n\n    flex-direction column\n    height 100%\n    justify-content space-around\n\n    // display flex\n    // flex-direction column\n    // height 100%\n    // justify-content space-around\n    // margin 0 auto\n    // width 70%\n\n\n  &__slogan\n    display flex\n    flex-direction column\n\n\n  &__slogan svg\n    display flex\n    margin 0 auto\n    width 150px\n\n    path\n      fill white\n\n  &__heading\n    //\n\n    span\n      display flex\n\n  &__options\n    display flex\n    justify-content space-around\n\n  &__button\n    background-color green\n\n    color white\n\n    border 1px solid green\n    border-radius 5px\n    color white\n    font-family roboto condensed\n\n    padding 1rem 3rem\n",".footer\n  &__layer\n    background-color white\n    height 100px\n\n  &__container\n    height 100%\n    justify-content space-between\n\n  &__item\n    align-items center\n    display flex\n    justify-content center\n\n  &__item svg\n    // margin-right .75rem\n    width 60px\n\n    path\n      fill brown\n\n  &__heading\n    color brown\n    font-family cursive\n    font-size 2rem\n    padding 0 .75rem\n    text-shadow none\n\n  &__copyright\n    padding-bottom 0\n    //t\n\n  &__privacy\n    padding-bottom 0\n    //\n"]}